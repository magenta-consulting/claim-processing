services:

    admin.position:
            class: AppBundle\Admin\PositionAdmin
            arguments: [~, AppBundle\Entity\Position, AppBundle:Admin/Position]
            tags:
                - { name: sonata.admin, manager_type: orm, label: User Management }
            calls:
                - [setContainer, ["@service_container"]]
                - [setUserManager, ["@fos_user.user_manager"]]
                - [setTemplate,[list,AppBundle:SonataAdmin/Position:list.html.twig]]
                - [setTemplate,[edit,AppBundle:SonataAdmin/Position:edit.html.twig]]
                - [setTemplate,[batch_confirmation,AppBundle:SonataAdmin/Position:batch_confirmation.html.twig]]
    admin.position_submitter:
            class: AppBundle\Admin\PositionSubmitterAdmin
            arguments: [~, AppBundle\Entity\PositionSubmitter, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: User Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.claim:
            class: AppBundle\Admin\ClaimAdmin
            arguments: [~, AppBundle\Entity\Claim, AppBundle:Admin/Claim]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Claim }
            calls:
                - [setContainer, ["@service_container"]]
                - [setTemplate,[edit,AppBundle:SonataAdmin/Claim:edit.html.twig]]
                - [setTemplate,[show,AppBundle:SonataAdmin/Claim:show.html.twig]]
                - [setTemplate,[list,AppBundle:SonataAdmin/Claim:list.html.twig]]
                - [setTemplate,[batch_confirmation,AppBundle:SonataAdmin/Claim:batch_confirmation.html.twig]]
    admin.claim_media:
            class: AppBundle\Admin\ClaimMediaAdmin
            arguments: [~, AppBundle\Entity\ClaimMedia, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Claim Media }
            calls:
                - [setContainer, ["@service_container"]]
    admin.limit_rule:
            class: AppBundle\Admin\LimitRuleAdmin
            arguments: [~, AppBundle\Entity\LimitRule, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Claims Limit Rules }
            calls:
                - [setContainer, ["@service_container"]]
    admin.employee_group:
            class: AppBundle\Admin\EmployeeGroupAdmin
            arguments: [~, AppBundle\Entity\EmployeeGroup, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Employee Group }
            calls:
                - [setContainer, ["@service_container"]]
    admin.limit_rule_employee_group:
            class: AppBundle\Admin\LimitRuleEmployeeGroupAdmin
            arguments: [~, AppBundle\Entity\LimitRuleEmployeeGroup, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Limit Rule Employee Group }
            calls:
                - [setContainer, ["@service_container"]]

    admin.cost_centre:
            class: AppBundle\Admin\CostCentreAdmin
            arguments: [~, AppBundle\Entity\CostCentre, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Cost Centre Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.region:
            class: AppBundle\Admin\RegionAdmin
            arguments: [~, AppBundle\Entity\Region, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Region Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.branch:
            class: AppBundle\Admin\BranchAdmin
            arguments: [~, AppBundle\Entity\Branch, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Branch Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.company:
            class: AppBundle\Admin\CompanyAdmin
            arguments: [~, AppBundle\Entity\Company, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Company Management }
            calls:
                - [setContainer, ["@service_container"]]
                - [addChild, ["@admin.position"]]
    admin.department:
            class: AppBundle\Admin\DepartmentAdmin
            arguments: [~, AppBundle\Entity\Department, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Department Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.section:
            class: AppBundle\Admin\SectionAdmin
            arguments: [~, AppBundle\Entity\Section, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Section Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.pay_code:
            class: AppBundle\Admin\PayCodeAdmin
            arguments: [~, AppBundle\Entity\PayCode, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Pay Code Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.pay_code_type:
            class: AppBundle\Admin\PayCodeTypeAdmin
            arguments: [~, AppBundle\Entity\PayCodeType, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Pay Code Type Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.tax_rate:
            class: AppBundle\Admin\TaxRateAdmin
            arguments: [~, AppBundle\Entity\TaxRate, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Tax Rate Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.claim_type:
            class: AppBundle\Admin\ClaimTypeAdmin
            arguments: [~, AppBundle\Entity\ClaimType, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Claim Type Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.claim_type_type:
            class: AppBundle\Admin\ClaimTypeTypeAdmin
            arguments: [~, AppBundle\Entity\ClaimTypeType, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Claim Type Management }
            calls:
                - [setContainer, ["@service_container"]]

    admin.claim_category:
            class: AppBundle\Admin\ClaimCategoryAdmin
            arguments: [~, AppBundle\Entity\ClaimCategory, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Claim Category Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.currency_exchange:
            class: AppBundle\Admin\CurrencyExchangeAdmin
            arguments: [~, AppBundle\Entity\CurrencyExchange, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Currency Management }
            calls:
                - [setContainer, ["@service_container"]]
                - [addChild, ["@admin.currency_exchange_value"]]
    admin.currency_exchange_value:
            class: AppBundle\Admin\CurrencyExchangeValueAdmin
            arguments: [~, AppBundle\Entity\CurrencyExchangeValue, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Currency Value Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.company_claim_policies:
            class: AppBundle\Admin\CompanyClaimPoliciesAdmin
            arguments: [~, AppBundle\Entity\CompanyClaimPolicies, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Claim Policies Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.company_flexi_claim_policies:
            class: AppBundle\Admin\CompanyFlexiClaimPoliciesAdmin
            arguments: [~, AppBundle\Entity\CompanyFlexiClaimPolicies, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Claim Flexi Policies Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.approval_amount_policies:
            class: AppBundle\Admin\ApprovalAmountPoliciesAdmin
            arguments: [~, AppBundle\Entity\ApprovalAmountPolicies, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Approval Amount Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.approval_amount_policies_employee_group:
            class: AppBundle\Admin\ApprovalAmountPoliciesEmployeeGroupAdmin
            arguments: [~, AppBundle\Entity\ApprovalAmountPoliciesEmployeeGroup, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Approval Amount Management }
            calls:
                - [setContainer, ["@service_container"]]

    admin.employee_type:
            class: AppBundle\Admin\EmployeeTypeAdmin
            arguments: [~, AppBundle\Entity\EmployeeType, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Employee Type Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.employment_type:
            class: AppBundle\Admin\EmploymentTypeAdmin
            arguments: [~, AppBundle\Entity\EmploymentType, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Employment Type Management }
            calls:
                - [setContainer, ["@service_container"]]
    admin.checker:
            class: AppBundle\Admin\CheckerAdmin
            arguments: [~, AppBundle\Entity\Checker, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Checker Grouping }
            calls:
                - [setContainer, ["@service_container"]]
    admin.checker_employee_group:
            class: AppBundle\Admin\CheckerEmployeeGroupAdmin
            arguments: [~, AppBundle\Entity\CheckerEmployeeGroup, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Checker Employee Group }
            calls:
                - [setContainer, ["@service_container"]]
    admin.third_party_checker:
            class: AppBundle\Admin\ThirdPartyCheckerAdmin
            arguments: [~, AppBundle\Entity\ThirdPartyChecker, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Third Party Checker }
            calls:
                - [setContainer, ["@service_container"]]
                - [setUserManager, ["@fos_user.user_manager"]]
